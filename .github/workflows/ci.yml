# This file was automatically generated by sbt-github-actions using the
# githubWorkflowGenerate task. You should add and commit this file to
# your git repository. It goes without saying that you shouldn't edit
# this file by hand! Instead, if you wish to make changes, you should
# change your sbt build configuration to revise the workflow description
# to meet your needs, then regenerate this file.

name: Continuous Integration

on:
  push:
    branches: ['**']
    tags: ['**']

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.13.10]
        java: [temurin@11]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java (temurin@11)
        if: matrix.java == 'temurin@11'
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 11

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Install node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Installing openapi-generator-cli
        run: npm install -g @openapitools/openapi-generator-cli

      - name: Build project
        run: sbt ++${{ matrix.scala }} test

      - name: Compress target directories
        run: tar cf targets.tar target generated/target project/target

      - name: Upload target directories
        uses: actions/upload-artifact@v2
        with:
          name: target-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}
          path: targets.tar

  publish:
    name: Publish Artifacts
    needs: [build]
    permissions:
      id-token: write
      contents: read
      packages: write
    if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/1.0.x' || startsWith(github.ref, 'refs/tags/'))
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.13.10]
        java: [temurin@11]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java (temurin@11)
        if: matrix.java == 'temurin@11'
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 11

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Download target directories (2.13.10)
        uses: actions/download-artifact@v2
        with:
          name: target-${{ matrix.os }}-2.13.10-${{ matrix.java }}

      - name: Inflate target directories (2.13.10)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Install node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Installing openapi-generator-cli
        run: npm install -g @openapitools/openapi-generator-cli

      - name: Get 1.0.x-SNAPSHOTS versionIds
        id: version
        if: github.ref == 'refs/heads/1.0.x'
        uses: castlabs/get-package-version-id-action@v2.0
        with:
          version: 1.0.x-SNAPSHOT

      - name: Deleting 1.0.x-SNAPSHOTS versions
        if: ${{ github.ref == 'refs/heads/1.0.x' && steps.version.outputs.ids != '' }}
        uses: actions/delete-package-versions@v2
        with:
          package-version-ids: ${{ steps.version.outputs.ids }}

      - name: Regenerating code
        run: sbt ++${{ matrix.scala }} generateCode

      - name: Compile project
        run: sbt ++${{ matrix.scala }} +compile

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-central-1
          role-to-assume: 'arn:aws:iam::505630707203:role/interop-github-ecr-dev'
          role-session-name: interop-be-api-gateway-${{ github.job }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: 'sbt ++${{ matrix.scala }} docker:publish'
