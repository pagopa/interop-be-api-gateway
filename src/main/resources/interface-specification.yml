openapi: 3.0.3
info:
  title: Interoperability API Gateway Micro Service
  description: exposes the API for interacting with interoperability features
  version: '1.0'
  contact:
    name: API Support
    url: 'http://www.example.com/support'
    email: support@example.com
  termsOfService: 'http://swagger.io/terms/'
  x-api-id: an x-api-id
  x-summary: an x-summary
servers:
  - url: '{{baseUrl}}/{{version}}'
    description: Base url of the interoperability API gateway
tags:
  - name: gateway
    description: Everything about your APIs
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: health
    description: Verify service status
    externalDocs:
      description: Find out more
      url: http://swagger.io
security:
  - bearerAuth: []
paths:
  '/agreements/{agreementId}':
    get:
      tags:
        - gateway
      summary: Get an agreement
      description: Retrieve an agreement using an agreement identifier
      operationId: getAgreement
      security:
        - bearerAuth: []
      parameters:
        - name: agreementId
          in: path
          description: the agreement id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Agreement retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agreement'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Agreement not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/purposes/eservices/{eserviceId}/consumer/{consumerId}':
    get:
      tags:
        - gateway
      summary: Get purposes for eserviceId/consumerId
      description: Retrieve all the active purposes associated to eserviceId/consumerId
      operationId: getPurposesByEserviceAndConsumer
      security:
        - bearerAuth: [ ]
      parameters:
        - name: eserviceId
          in: path
          description: the eservice Id
          required: true
          schema:
            type: string
            format: uuid
        - name: consumerId
          in: path
          description: the consumer Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Purposes retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purposes'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Purposes not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/purposes/{purposeId}':
    get:
      tags:
        - gateway
      summary: Get an purpose
      description: Retrieve a purpose using a purpose identifier
      operationId: getPurpose
      parameters:
        - name: purposeId
          in: path
          description: the purpose Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Purpose retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purpose'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Purpose not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/purposes/{purposeId}/agreement':
    get:
      tags:
        - gateway
      summary: Get an agreement by purposeId
      description: Retrieve the agreement associated to a purpose
      operationId: getAgreementByPurpose
      security:
        - bearerAuth: []
      parameters:
        - name: purposeId
          in: path
          description: the purpose Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Agreement retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agreement'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Agreement not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  /attributes:
    post:
      tags:
        - gateway
      summary: Creates an attribute
      description: Creates an attribute if the caller is a certifier
      operationId: createCertifiedAttribute
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeSeed'
      responses:
        '200':
          description: The newly created attribute
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Attribute'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '409':
          description: Conflict
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/attributes/{attributeId}':
    get:
      tags:
        - gateway
      summary: Get an attribute
      description: Retrieve an attribute using an attribute identifier
      operationId: getAttribute
      security:
        - bearerAuth: []
      parameters:
        - name: attributeId
          in: path
          description: the attribute Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Attribute retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Attribute not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/clients/{clientId}':
    get:
      tags:
        - gateway
      summary: Get a client
      description: Retrieve a client using a client identifier
      operationId: getClient
      security:
        - bearerAuth: []
      parameters:
        - name: clientId
          in: path
          description: the client Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Client retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Client not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/eservices':
    get:
      tags:
        - gateway
      summary: Retrieves EServices catalog
      description: Retrieves EServices catalog
      operationId: getEServices
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          required: true
          description: the maximum number of events returned by this response
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 50
        - name: offset
          in: query
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
      responses:
        '200':
          description: A list of EServices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogEServices'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/eservices/{eserviceId}':
    get:
      tags:
        - gateway
      summary: Get the eservice by ID
      description: Get the eservice by ID
      operationId: getEService
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: eserviceId
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: successfully associated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EService'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/eservices/{eserviceId}/descriptors':
    get:
      tags:
        - gateway
      summary: Get the eservice descriptors by eservice ID
      description: Get the eservice descriptors by eservice ID
      operationId: getEServiceDescriptors
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: eserviceId
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: successfully associated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EServiceDescriptors'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/eservices/{eserviceId}/descriptors/{descriptorId}':
    get:
      tags:
        - gateway
      summary: Get an eservice descriptor
      description: Retrieve an eservice descriptor by identifiers
      operationId: getEServiceDescriptor
      security:
        - bearerAuth: []
      parameters:
        - name: eserviceId
          in: path
          description: the eservice Id
          required: true
          schema:
            type: string
            format: uuid
        - name: descriptorId
          in: path
          description: the eservice descriptor Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: EService retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EServiceDescriptor'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: EService not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/organizations/{organizationId}':
    get:
      tags:
        - gateway
      summary: Get an organization
      description: Retrieve an organization by identifier
      operationId: getOrganization
      security:
        - bearerAuth: []
      parameters:
        - name: organizationId
          in: path
          description: the organization Id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Organization retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Organization not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  /agreements:
    get:
      tags:
        - gateway
      summary: Retrieve a list of agreement
      description: |
        It is mandatory to insert either the producerId field or the consumerId field.
      operationId: getAgreements
      parameters:
        - in: query
          name: producerId
          schema:
            type: string
            format: uuid
        - in: query
          name: consumerId
          schema:
            type: string
            format: uuid
        - in: query
          name: eserviceId
          schema:
            type: string
            format: uuid
        - in: query
          name: descriptorId
          schema:
            type: string
            format: uuid
        - in: query
          name: states
          description: comma separated sequence of agreement states to filter the response with
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AgreementState'
            default: []
          explode: false
      responses:
        '200':
          description: A list of Agreement
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agreements'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/events':
    get:
      tags:
        - gateway
      summary: Get list of events
      description: Retrieves the list of events for the caller's institution
      operationId: getEventsFromId
      security:
        - bearerAuth: []
      parameters:
        - name: lastEventId
          in: query
          description: last event identifier already processed by the caller
          required: true
          schema:
            type: integer
            format: int64
            default: 0
        - name: limit
          in: query
          description: the maximum number of events returned by this response
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 500
            default: 100
      responses:
        '200':
          description: Messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Events'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/events/eservices':
    get:
      tags:
        - gateway
      summary: Get list of eservices events
      description: Retrieves the list of eservices events
      operationId: getEservicesEventsFromId
      security:
        - bearerAuth: [ ]
      parameters:
        - name: lastEventId
          in: query
          description: last event identifier already processed by the caller
          required: true
          schema:
            type: integer
            format: int64
            default: 0
        - name: limit
          in: query
          description: the maximum number of events returned by this response
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 500
            default: 100
      responses:
        '200':
          description: Messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Events'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/events/keys':
    get:
      tags:
        - gateway
      summary: Get list of keys events
      description: Retrieves the list of keys events
      operationId: getKeysEventsFromId
      security:
        - bearerAuth: [ ]
      parameters:
        - name: lastEventId
          in: query
          description: last event identifier already processed by the caller
          required: true
          schema:
            type: integer
            format: int64
            default: 0
        - name: limit
          in: query
          description: the maximum number of events returned by this response
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 500
            default: 100
      responses:
        '200':
          description: Messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Events'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '429':
          description: Too Many Requests
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/keys/{kid}':
    get:
      tags:
        - gateway
      summary: Retrieve key in JWK format
      description: Retrieve the JWK by kid
      operationId: getJWKByKid
      security:
        - bearerAuth: [ ]
      parameters:
        - name: kid
          in: path
          description: the unique identifier of the key (kid) to lookup
          required: true
          schema:
            type: string
      responses:
        '200':
          description: returns the corresponding JWK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWK'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Key not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  /status:
    get:
      security: []
      summary: Returns the application status
      description: |
        Returns the application status. For testing purposes, it might randomly reply with an error.
      operationId: get_status
      tags:
        - health
      responses:
        '200':
          description: |
            This is the valid status from the server.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  '/agreements/{agreementId}/purposes':
    get:
      tags:
        - gateway
      summary: Get an purpose
      description: Retrieve purposes of the agreement
      operationId: getAgreementPurposes
      parameters:
        - name: agreementId
          in: path
          description: the agreement identifier
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Purposes retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purposes'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Purposes not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  '/agreements/{agreementId}/attributes':
    get:
      tags:
        - gateway
      summary: Get agreement attributes
      description: Retrieve attributes of the agreement
      operationId: getAgreementAttributes
      parameters:
        - name: agreementId
          in: path
          description: the agreement identifier
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Attributes retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attributes'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Purposes not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  /organizations/origin/{origin}/externalId/{externalId}/attributes/{code}:
    post:
      tags:
        - gateway
      operationId: upsertTenant
      description: Upserts the Tenant
      parameters:
        - name: origin
          in: path
          description: the origin identifier
          required: true
          schema:
            type: string
        - name: externalId
          in: path
          description: the externalId identifier
          required: true
          schema:
            type: string
        - name: code
          in: path
          description: the attribute code identifier
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
    delete:
      tags:
        - gateway
      operationId: revokeTenantAttribute
      description: Revokes a Tenant attribute
      parameters:
        - name: origin
          in: path
          description: the origin identifier
          required: true
          schema:
            type: string
        - name: externalId
          in: path
          description: the externalId identifier
          required: true
          schema:
            type: string
        - name: code
          in: path
          description: the attribute code identifier
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
  /organizations/origin/{origin}/externalId/{externalId}/eservices:
    post:
      tags:
        - gateway
      operationId: getOrganizationEServices
      description: Retrieve EServices for a given Organization
      parameters:
        - name: origin
          in: path
          description: the origin identifier
          required: true
          schema:
            type: string
        - name: externalId
          in: path
          description: the externalId identifier
          required: true
          schema:
            type: string
        - name: attributeOrigin
          in: query
          description: attribute origin that the EService must contain
          required: true
          schema:
            type: string
        - name: attributeCode
          in: query
          description: attribute code that the EService must contain
          required: true
          schema:
            type: string
      responses:
        '200':
          description: EServices retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EServices'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          headers:
            'X-Rate-Limit-Limit':
              schema:
                type: integer
              description: Max allowed requests within time interval
            'X-Rate-Limit-Remaining':
              schema:
                type: integer
              description: Remaining requests within time interval
            'X-Rate-Limit-Interval':
              schema:
                type: integer
              description: Time interval in milliseconds. Allowed requests will be constantly replenished during the interval. At the end of the interval the max allowed requests will be available
components:
  schemas:
    CatalogEServices:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CatalogEService'
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
        - results
        - pagination
    CatalogEService:
      type: object
      required:
        - id
        - name
        - description
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
    Client:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
        consumerId:
          type: string
          format: uuid
      required:
        - id
        - consumerId
    EServiceDescriptor:
      description: eservice descriptor model
      type: object
      required:
        - id
        - version
        - docs
        - state
        - creationDate
        - audience
        - voucherLifespan
        - dailyCallsPerConsumer
        - dailyCallsTotal
        - serverUrls
      properties:
        id:
          description: eservice descriptor identifier
          type: string
          format: uuid
        version:
          description: eservice descriptor version
          type: string
        description:
          description: eservice descriptor description
          type: string
        audience:
          description: eservice descriptor audience
          type: array
          items:
            type: string
        voucherLifespan:
          description: voucher duration
          type: integer
          format: int32
        dailyCallsPerConsumer:
          description: max number of daily requests per consumer
          type: integer
          format: int32
          minimum: 0
        dailyCallsTotal:
          description: total number of daily requests delivered by the eservice
          type: integer
          format: int32
          minimum: 0
        interface:
          $ref: '#/components/schemas/EServiceDoc'
        docs:
          description: eservice supplementary documents
          type: array
          items:
            $ref: '#/components/schemas/EServiceDoc'
        state:
          $ref: '#/components/schemas/EServiceDescriptorState'
        serverUrls:
          type: array
          items:
            type: string
    EService:
      description: The eservice model
      type: object
      required:
        - id
        - producer
        - name
        - version
        - description
        - technology
        - attributes
        - state
        - serverUrls
      properties:
        id:
          description: eservice identifier
          type: string
          format: uuid
        producer:
          $ref: '#/components/schemas/Organization'
        name:
          description: eservice name
          type: string
        version:
          type: string
          pattern: ^[0-9]{1,4}$
        description:
          description: eservice description
          type: string
        technology:
          $ref: '#/components/schemas/EServiceTechnology'
        attributes:
          $ref: '#/components/schemas/EServiceAttributes'
        state:
          $ref: '#/components/schemas/EServiceDescriptorState'
        serverUrls:
          type: array
          items:
            type: string
    EServiceAttributes:
      description: the attributes set associated to the EService
      properties:
        certified:
          description: certified attributes list
          type: array
          items:
            $ref: '#/components/schemas/EServiceAttribute'
        declared:
          description: declared attributes list
          type: array
          items:
            $ref: '#/components/schemas/EServiceAttribute'
        verified:
          description: verified attributes list
          type: array
          items:
            $ref: '#/components/schemas/EServiceAttribute'
      required:
        - certified
        - declared
        - verified
    EServiceAttribute:
      description: |
        EService attribute model.
        In the resolution of the expression of the attribute, a single attribute is combined with other attributes 
        with AND operator.
        A group of attributes combined together with OR oparator; in the resolution of the expression of the attribute, 
        it is combined with other attributes with AND operator.
      type: object
      properties:
        single:
          $ref: '#/components/schemas/EServiceAttributeValue'
        group:
          type: array
          items:
            $ref: '#/components/schemas/EServiceAttributeValue'
    EServiceAttributeValue:
      description: attribute value
      type: object
      properties:
        id:
          description: attribute identifier
          type: string
          format: uuid
        code:
          type: string
          description: source identifier
          pattern: '[a-z0-9 \-]{,48}'
          maxLength: 48
        origin:
          $ref: '#/components/schemas/Origin'
        explicitAttributeVerification:
          description: |
            this field is used only in the flow of verified attributes:
            if true the producer must check the attribute,
            otherwise, if it is already verified by another producer, it can be implicitly verified
          type: boolean
      required:
        - id
        - explicitAttributeVerification
    EServiceDescriptorState:
      type: string
      description: EService State
      enum:
        - PUBLISHED
        - DEPRECATED
        - SUSPENDED
        - ARCHIVED
    EServiceDescriptors:
      description: eservice descriptors list model
      type: object
      required:
        - descriptors
      properties:
        descriptors:
          type: array
          items:
            $ref: '#/components/schemas/EServiceDescriptor'
    EServices:
      description: EServices list model
      type: object
      required:
        - eservices
      properties:
        eservices:
          type: array
          items:
            $ref: '#/components/schemas/EService'
    EServiceDoc:
      description: eservice descriptor document model
      type: object
      required:
        - id
        - name
        - contentType
      properties:
        id:
          description: document identifier
          type: string
          format: uuid
        name:
          description: document name
          type: string
        contentType:
          description: document content type
          type: string
    EServiceTechnology:
      description: API technlogy admitted
      type: string
      enum:
        - REST
        - SOAP
    ExternalId:
      description: organization identifier model
      type: object
      required:
        - origin
        - id
      properties:
        origin:
          $ref: '#/components/schemas/Origin'
        id:
          description: external organization identifier (es codice ipa)
          type: string
    JWK:
      description: 'Models a JWK'
      type: object
      properties:
        kty:
          type: string
        key_ops:
          type: array
          items:
            type: string
        use:
          type: string
        alg:
          type: string
        kid:
          type: string
        x5u:
          type: string
          minLength: 1
        x5t:
          type: string
        'x5t#S256':
          type: string
        x5c:
          type: array
          items:
            type: string
        crv:
          type: string
        x:
          type: string
        'y':
          type: string
        d:
          type: string
        k:
          type: string
        'n':
          type: string
        e:
          type: string
        p:
          type: string
        q:
          type: string
        dp:
          type: string
        dq:
          type: string
        qi:
          type: string
        oth:
          uniqueItems: false
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/OtherPrimeInfo'
      required:
        - kty
        - kid
    OtherPrimeInfo:
      title: OtherPrimeInfo
      type: object
      properties:
        r:
          type: string
        d:
          type: string
        t:
          type: string
      required:
        - r
        - d
        - t
    Organization:
      type: object
      description: organization model
      additionalProperties: false
      properties:
        id:
          description: internal organization identifier
          type: string
          format: uuid
        externalId:
          $ref: '#/components/schemas/ExternalId'
        name:
          description: organization name
          type: string
        category:
          description: organization category (IPA category)
          type: string
      required:
        - id
        - externalId
        - name
        - category
    Origin:
      description: external id origin
      type: string
    PurposeState:
      type: string
      description: Purpose State
      enum:
        - ACTIVE
        - DRAFT
        - SUSPENDED
        - WAITING_FOR_APPROVAL
        - ARCHIVED
    Purpose:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
        throughput:
          type: integer
          format: int32
        state:
          $ref: '#/components/schemas/PurposeState'
      required:
        - id
        - throughput
        - state
    Purposes:
      type: object
      properties:
        purposes:
          type: array
          items:
            $ref: '#/components/schemas/Purpose'
      required:
        - purposes
    AttributeKind:
      type: string
      enum:
        - CERTIFIED
        - DECLARED
        - VERIFIED
    AttributeSeed:
      type: object
      additionalProperties: false
      title: Attribute
      description: represents the details of a verified attribute bound to the agreement.
      properties:
        code:
          type: string
          description: source identifier
          pattern: '^[a-zA-Z0-9\-_]+$'
          minLength: 2
          maxLength: 16
        name:
          type: string
          description: human readable name
          pattern: '^[a-zA-Z0-9\s\-_]+$'
          minLength: 2
          maxLength: 24
        description:
          type: string
          description: human readable description
          pattern: '^[a-zA-Z0-9\s\-_\.,;\:]+$'
          minLength: 2
          maxLength: 64
      required:
        - code
        - name
        - description
    AttributeValidity:
      type: string
      enum:
        - VALID
        - INVALID
    Attribute:
      type: object
      additionalProperties: false
      title: Attribute
      description: represents the details of a verified attribute bound to the agreement.
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          pattern: '^[a-zA-Z0-9\s\-_]+$'
          minLength: 2
          maxLength: 16
        kind:
          $ref: '#/components/schemas/AttributeKind'
      required:
        - id
        - name
        - kind
    Attributes:
      type: object
      properties:
        verified:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/AttributeValidityState'
        certified:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/AttributeValidityState'
        declared:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/AttributeValidityState'
      required:
        - verified
        - certified
        - declared
    AttributeValidityState:
      type: object
      additionalProperties: false
      title: AttributeValidityState
      description: represents the validity of a specified attribute
      properties:
        id:
          type: string
          format: uuid
        validity:
          $ref: '#/components/schemas/AttributeValidity'
      required:
        - id
        - validity
    AgreementState:
      type: string
      description: Agreement State
      enum:
        - PENDING
        - ACTIVE
        - SUSPENDED
        - ARCHIVED
        - MISSING_CERTIFIED_ATTRIBUTES
        - REJECTED
    Agreement:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: uuid
        eserviceId:
          type: string
          format: uuid
        descriptorId:
          type: string
          format: uuid
        producerId:
          type: string
          format: uuid
        consumerId:
          type: string
          format: uuid
        state:
          $ref: '#/components/schemas/AgreementState'
      required:
        - id
        - eserviceId
        - descriptorId
        - producerId
        - consumerId
        - state
      description: business representation of an agreement
    Agreements:
      type: object
      properties:
        agreements:
          type: array
          items:
            $ref: '#/components/schemas/Agreement'
      required:
        - agreements
    Events:
      type: object
      properties:
        lastEventId:
          type: integer
          format: int64
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
      required:
        - events
    Event:
      properties:
        eventId:
          type: integer
          format: int64
        eventType:
          type: string
        objectType:
          type: string
        objectId:
          additionalProperties:
            type: string
      required:
        - eventId
        - eventType
        - objectType
        - objectId
    Pagination:
      type: object
      properties:
        offset:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
      required:
        - offset
        - limit
        - totalCount
    Problem:
      properties:
        type:
          description: URI reference of type definition
          type: string
        status:
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          example: 400
          exclusiveMaximum: true
          format: int32
          maximum: 600
          minimum: 100
          type: integer
        title:
          description: A short, summary of the problem type. Written in english and readable
          example: Service Unavailable
          maxLength: 64
          pattern: '^[ -~]{0,64}$'
          type: string
        correlationId:
          description: Unique identifier of the request
          example: '53af4f2d-0c87-41ef-a645-b726a821852b'
          maxLength: 64
          type: string
        detail:
          description: A human readable explanation of the problem.
          example: Request took too long to complete.
          maxLength: 4096
          pattern: '^.{0,1024}$'
          type: string
        errors:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/ProblemError'
      additionalProperties: false
      required:
        - type
        - status
        - title
        - errors
    ProblemError:
      properties:
        code:
          description: Internal code of the error
          example: 123-4567
          minLength: 8
          maxLength: 8
          pattern: '^[0-9]{3}-[0-9]{4}$'
          type: string
        detail:
          description: A human readable explanation specific to this occurrence of the problem.
          example: Parameter not valid
          maxLength: 4096
          pattern: '^.{0,1024}$'
          type: string
      required:
        - code
        - detail
  securitySchemes:
    bearerAuth:
      type: http
      description: 'A bearer token in the format of a JWS and conformed to the specifications included in [RFC8725](https://tools.ietf.org/html/RFC8725).'
      scheme: bearer
      bearerFormat: JWT
