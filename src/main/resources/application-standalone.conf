akka {
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  management {
    http {
      hostname = "0.0.0.0"
      bind-hostname = 0.0.0.0
      route-providers-read-only = false
    }
    health-checks {
      readiness-checks {
        ready = "it.pagopa.interop.apigateway.server.impl.HealthCheck"
      }
      liveness-checks {
        live = "it.pagopa.interop.apigateway.server.impl.LiveCheck"
      }
    }
  }
}

interop-api-gateway {
  port = 8088

  services {
    agreement-process = "https://gateway.interop.pdnd.dev/agreement-process/0.1"
    authorization-process = "https://gateway.interop.pdnd.dev/authorization-process/0.1"
    party-registry-proxy = "https://gateway.interop.pdnd.dev/party-registry-proxy/0.1"
    attribute-registry-process = "https://gateway.interop.pdnd.dev/attribute-registry-process/0.1"
    catalog-process = "https://gateway.interop.pdnd.dev/catalog-process/0.1"
    purpose-process = "https://gateway.interop.pdnd.dev/purpose-process/0.1"
    tenant-process = "https://gateway.interop.pdnd.dev/tenant-process/0.1"
    notifier = "https://gateway.interop.pdnd.dev/notifier/0.1"
  }
  jwt {
    audience = ${ACCEPTED_AUDIENCES}
  }

  rate-limiter {
    limiter-group = "API_GW"
    max-requests = 100
    burst-percentage = 1.2
    rate-interval = "1.second"
    redis-host = "nowhere"
    redis-port = 0
    timeout = "1.millisecond"
  }

  read-model {
    db {
      name = ${READ_MODEL_DB_NAME}
      connection-string = "mongodb://"${READ_MODEL_DB_USER}":"${READ_MODEL_DB_PASSWORD}"@"${READ_MODEL_DB_HOST}":"${READ_MODEL_DB_PORT}"/"${READ_MODEL_DB_NAME}"?directConnection=true&serverSelectionTimeoutMS=2000"
    }
  }
}

interop-commons {
  isInternetFacing = true

  jwt {
    public-keys {
      urls = ${WELL_KNOWN_URLS}
    }
  }
}

futures-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor.fixed-pool-size-min = 4
} 
